[PATCH] Make the UTF16 support configurable

libicu is quite large, and unicode partition names are uncommon, so we
may not necessarily want to have UTF16 support unconditionnally. This
patch adds a USE_UTF16 environment variable to tell whether we want
the UTF16 support or not.

Signed-off-by: Justin Maggard <jmaggard10@gmail.com>
Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
[baruch: add $(LDLIBS)]
Signed-off-by: Baruch Siach <baruch@tkos.co.il>
---
Index: b/Makefile
===================================================================
--- a/Makefile
+++ b/Makefile
@@ -1,8 +1,11 @@
 CC=gcc
 CXX=g++
 CFLAGS+=-D_FILE_OFFSET_BITS=64
-CXXFLAGS+=-Wall -D_FILE_OFFSET_BITS=64 -D USE_UTF16
-#CXXFLAGS+=-Wall -D_FILE_OFFSET_BITS=64
+CXXFLAGS+=-Wall -D_FILE_OFFSET_BITS=64
+ifeq ($(USE_UTF16),y)
+CXXFLAGS+=-D USE_UTF16
+UTF16_LIBS=-licuio -licuuc
+endif
 LDFLAGS+=
 LIB_NAMES=crc32 support guid gptpart mbrpart basicmbr mbr gpt bsd parttypes attributes diskio diskio-unix
 MBR_LIBS=support diskio diskio-unix basicmbr mbrpart
@@ -14,16 +17,13 @@
 all:	cgdisk gdisk sgdisk fixparts
 
 gdisk:	$(LIB_OBJS) gdisk.o gpttext.o
-#	$(CXX) $(LIB_OBJS) gdisk.o gpttext.o $(LDFLAGS) -luuid -o gdisk
-	$(CXX) $(LIB_OBJS) gdisk.o gpttext.o $(LDFLAGS) -licuio -licuuc -luuid -o gdisk
+	$(CXX) $(LIB_OBJS) gdisk.o gpttext.o $(LDFLAGS) $(UTF16_LIBS) -luuid $(LDLIBS) -o gdisk
 
 cgdisk: $(LIB_OBJS) cgdisk.o gptcurses.o
-#	$(CXX) $(LIB_OBJS) cgdisk.o gptcurses.o $(LDFLAGS) -luuid -lncurses -o cgdisk
-	$(CXX) $(LIB_OBJS) cgdisk.o gptcurses.o $(LDFLAGS) -licuio -licuuc -luuid -lncurses -o cgdisk
+	$(CXX) $(LIB_OBJS) cgdisk.o gptcurses.o $(LDFLAGS) $(UTF16_LIBS) -luuid -lncurses $(LDLIBS) -o cgdisk
 
 sgdisk: $(LIB_OBJS) sgdisk.o gptcl.o
-#	$(CXX) $(LIB_OBJS) sgdisk.o gptcl.o $(LDFLAGS) -luuid -lpopt -o sgdisk
-	$(CXX) $(LIB_OBJS) sgdisk.o gptcl.o $(LDFLAGS) -licuio -licuuc -luuid -lpopt -o sgdisk
+	$(CXX) $(LIB_OBJS) sgdisk.o gptcl.o $(LDFLAGS) $(UTF16_LIBS) -luuid -lpopt $(LDLIBS) -o sgdisk
 
 fixparts: $(MBR_LIB_OBJS) fixparts.o
 	$(CXX) $(MBR_LIB_OBJS) fixparts.o $(LDFLAGS) -o fixparts
