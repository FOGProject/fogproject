#!/usr/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Get the current branch name
gitbranch=$(git branch | awk '/*/ {print $2}')

# Get the latest tag commit
gitcom=$(git rev-list --tags --no-walk --max-count=1)

# Count commits from the last tag to HEAD
gitcount=$(git rev-list ${gitcom}..HEAD --count)

# Extract the first part of the branch name
branchon=$(echo ${gitbranch} | awk -F'-' '{print $1}')

# Extract the second part of the branch name
branchend=$(echo ${gitbranch} | awk -F'-' '{print $2}')

verbegin=""
channel=""

case $branchon in
    dev|stable)
        # Describe the tag and append the commit count correctly
        tagversion=$(git describe --tags ${gitcom})
        baseversion=${tagversion%.*}   # Retain everything before the last segment
        lastrevision=${tagversion##*.} # Extracts the last segment
        trunkversion="${baseversion}.$(($lastrevision + gitcount))"
        channel="Patches"
        ;;
    working)
        # Generate a version number based on the branchend and commit count for the working branch
        verbegin="${branchend}.0-beta"
        trunkversion="${verbegin}.${gitcount}"
        channel="Beta"
        ;;
esac

# Define the path to the system file
system_file="$(git rev-parse --show-toplevel)/packages/web/lib/fog/system.class.php"

# Update the version and channel in the system file
sed -i "s/define('FOG_VERSION',.*);/define('FOG_VERSION', '$trunkversion');/g" $system_file
sed -i "s/define('FOG_CHANNEL',.*);/define('FOG_CHANNEL', '$channel');/g" $system_file

# Add the modified system file to the staging area
git add $system_file
